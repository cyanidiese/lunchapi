{
    "swagger": "2.0",
    "info": {
        "description": "This is a sample server celler server.",
        "title": "Test REST API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "3.0"
    },
    "basePath": "/",
    "paths": {
        "/auth/login": {
            "post": {
                "description": "Get Login Info",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Login",
                "parameters": [
                    {
                        "description": "Request Body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/requests.AuthLoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/responses.AuthLoginResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/responses.AuthLoginResponse"
                            }
                        }
                    }
                }
            }
        },
        "/categories/index": {
            "get": {
                "description": "Get Categories List",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Categories"
                ],
                "summary": "Get Categories",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Category"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/errors.RequestError"
                        }
                    }
                }
            }
        },
        "/comments/index": {
            "get": {
                "description": "Get Comments List",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Comments"
                ],
                "summary": "Get Comments",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Dish ID",
                        "name": "dish_id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Menu Item ID",
                        "name": "item_id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Owner ID",
                        "name": "owner_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Comment"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/errors.RequestError"
                        }
                    }
                }
            }
        },
        "/comments/save": {
            "post": {
                "description": "Add or update your Comment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Comments"
                ],
                "summary": "Save Comment",
                "parameters": [
                    {
                        "description": "Comment Details",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.Comment"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.Comment"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/errors.RequestError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/errors.RequestError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/errors.RequestError"
                        }
                    }
                }
            }
        },
        "/comments/{id}/delete": {
            "delete": {
                "description": "Delete Comment By Id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Comments"
                ],
                "summary": "Delete Comment",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Comment Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/responses.GeneralResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/errors.RequestError"
                        }
                    }
                }
            }
        },
        "/dishes/index": {
            "get": {
                "description": "Get Dishes List",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dishes"
                ],
                "summary": "Get Dishes",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Provider ID",
                        "name": "provider_id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Category ID",
                        "name": "category_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Dish"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/errors.RequestError"
                        }
                    }
                }
            }
        },
        "/master/favorites": {
            "get": {
                "security": [
                    {
                        "Authorization": []
                    }
                ],
                "description": "Make Order for some Dishes",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Master"
                ],
                "summary": "Get Favorites",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/structs.IdsArray"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/errors.RequestError"
                        }
                    }
                }
            }
        },
        "/master/favorites/add": {
            "post": {
                "security": [
                    {
                        "Authorization": []
                    }
                ],
                "description": "Add Dish To Favorites",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Master"
                ],
                "summary": "Add Dish To Favorites",
                "parameters": [
                    {
                        "description": "Dish Id",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/structs.SimpleId"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/structs.IdsArray"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/errors.RequestError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/errors.RequestError"
                        }
                    }
                }
            }
        },
        "/master/favorites/remove": {
            "delete": {
                "security": [
                    {
                        "Authorization": []
                    }
                ],
                "description": "Remove Dish From Favorites",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Master"
                ],
                "summary": "Remove Dish From Favorites",
                "parameters": [
                    {
                        "description": "Dish Id",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/structs.SimpleId"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/structs.IdsArray"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/errors.RequestError"
                        }
                    }
                }
            }
        },
        "/master/history/{from_date}/to/{to_date}": {
            "get": {
                "security": [
                    {
                        "Authorization": []
                    }
                ],
                "description": "Get Master Orders History",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Master"
                ],
                "summary": "Master Orders History",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Start Date",
                        "name": "from_date",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "End Date",
                        "name": "to_date",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Order"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/errors.RequestError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/errors.RequestError"
                        }
                    }
                }
            }
        },
        "/master/index": {
            "get": {
                "security": [
                    {
                        "Authorization": []
                    }
                ],
                "description": "Get Login Info",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Master"
                ],
                "summary": "Master Info",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/errors.RequestError"
                        }
                    }
                }
            }
        },
        "/master/orders/{provider_id}/{date}": {
            "get": {
                "security": [
                    {
                        "Authorization": []
                    }
                ],
                "description": "Make Order for some Menu Items",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Master"
                ],
                "summary": "Make Order",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Date",
                        "name": "date",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Provider Id",
                        "name": "provider_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Order"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/errors.RequestError"
                        }
                    }
                }
            }
        },
        "/master/orders/{provider_id}/{date}/make": {
            "post": {
                "security": [
                    {
                        "Authorization": []
                    }
                ],
                "description": "Make Order for some Menu Items",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Master"
                ],
                "summary": "Make Order",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Date",
                        "name": "date",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Provider Id",
                        "name": "provider_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Menu Items Ids with count ordering",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/requests.OrderingRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Order"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/errors.RequestError"
                        }
                    }
                }
            }
        },
        "/master/stats/{from_date}/to/{to_date}": {
            "get": {
                "security": [
                    {
                        "Authorization": []
                    }
                ],
                "description": "Get Master Stats",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Master"
                ],
                "summary": "Master Stats",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Start Date",
                        "name": "from_date",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "End Date",
                        "name": "to_date",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/responses.StatsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/errors.RequestError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/errors.RequestError"
                        }
                    }
                }
            }
        },
        "/master/update": {
            "post": {
                "security": [
                    {
                        "Authorization": []
                    }
                ],
                "description": "Update Master",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Master"
                ],
                "summary": "Master Update",
                "parameters": [
                    {
                        "description": "Menu Items Ids with count ordering",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/requests.UpdateProfileRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/errors.RequestError"
                        }
                    }
                }
            }
        },
        "/notifications/create": {
            "post": {
                "description": "Add or update your Notification",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Notifications"
                ],
                "summary": "Save Notification",
                "parameters": [
                    {
                        "description": "Notification Details",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/requests.NotificationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.Notification"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/errors.RequestError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/errors.RequestError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/errors.RequestError"
                        }
                    }
                }
            }
        },
        "/notifications/index": {
            "get": {
                "description": "Get Notifications List",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dishes"
                ],
                "summary": "Get Notification",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Notification"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/errors.RequestError"
                        }
                    }
                }
            }
        },
        "/notifications/{id}/approve": {
            "put": {
                "description": "Approve Notification By Id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Notifications"
                ],
                "summary": "Approve Notification",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Notification Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/responses.GeneralResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/errors.RequestError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/errors.RequestError"
                        }
                    }
                }
            }
        },
        "/notifications/{id}/delete": {
            "delete": {
                "description": "Delete Notification By Id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Notifications"
                ],
                "summary": "Delete Notification",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Notification Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/responses.GeneralResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/errors.RequestError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/errors.RequestError"
                        }
                    }
                }
            }
        },
        "/notifications/{id}/mark": {
            "put": {
                "description": "Toggle Mark Notification As Read",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Notifications"
                ],
                "summary": "Toggle Mark Notification As Read",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Notification Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/responses.GeneralResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/errors.RequestError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/errors.RequestError"
                        }
                    }
                }
            }
        },
        "/offices/index": {
            "get": {
                "description": "Get Offices List",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Offices"
                ],
                "summary": "Get Offices",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Office"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/errors.RequestError"
                        }
                    }
                }
            }
        },
        "/provider/{profile_id}": {
            "get": {
                "description": "Get Provider Profile",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Providers"
                ],
                "summary": "Get Provider Profile",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Provider Id",
                        "name": "provider_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/errors.RequestError"
                        }
                    }
                }
            }
        },
        "/provider/{provider_id}/dish/save": {
            "post": {
                "description": "Save dish changes or create a new one if no dish was found by ID in request body",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dishes"
                ],
                "summary": "Save Or Create Dish",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Provider Id",
                        "name": "provider_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Dish Details",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.Dish"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.Dish"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/errors.RequestError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/errors.RequestError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/errors.RequestError"
                        }
                    }
                }
            }
        },
        "/provider/{provider_id}/dish/{id}/delete": {
            "delete": {
                "description": "Remove Provider's Dish by Id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dishes"
                ],
                "summary": "Remove Provider's Dish by Id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Provider Id",
                        "name": "provider_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Dish Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/responses.GeneralResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/errors.RequestError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/errors.RequestError"
                        }
                    }
                }
            }
        },
        "/provider/{provider_id}/history/{from_date}/to/{to_date}": {
            "get": {
                "security": [
                    {
                        "Authorization": []
                    }
                ],
                "description": "Get Master Orders History",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Master"
                ],
                "summary": "Master Orders History",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Provider Id",
                        "name": "provider_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Start Date",
                        "name": "from_date",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "End Date",
                        "name": "to_date",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Order"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/errors.RequestError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/errors.RequestError"
                        }
                    }
                }
            }
        },
        "/provider/{provider_id}/menus": {
            "get": {
                "description": "Get List of Provider's Menus",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Menus"
                ],
                "summary": "Get List of Provider's Menus",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Provider Id",
                        "name": "provider_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.Menu"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/errors.RequestError"
                        }
                    }
                }
            }
        },
        "/provider/{provider_id}/menus/{date}": {
            "get": {
                "description": "Get Provider's Menu by Date",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Menus"
                ],
                "summary": "Get Provider's Menu by Date",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Provider Id",
                        "name": "provider_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Menu Date",
                        "name": "date",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Menu"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/errors.RequestError"
                        }
                    }
                }
            }
        },
        "/provider/{provider_id}/menus/{date}/clone/{new}": {
            "post": {
                "description": "Clone Menu To Other Date",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Menus"
                ],
                "summary": "Clone Menu To Other Date",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Provider Id",
                        "name": "provider_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Menu Date",
                        "name": "date",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "New Date",
                        "name": "new",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.Menu"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/errors.RequestError"
                        }
                    }
                }
            }
        },
        "/provider/{provider_id}/menus/{date}/delete": {
            "delete": {
                "description": "Remove Provider's Menu by Date",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Menus"
                ],
                "summary": "Remove Provider's Menu by Date",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Provider Id",
                        "name": "provider_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Menu Date",
                        "name": "date",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/responses.GeneralResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/errors.RequestError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/errors.RequestError"
                        }
                    }
                }
            }
        },
        "/provider/{provider_id}/menus/{date}/save": {
            "post": {
                "description": "Save Menu Changes",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Menus"
                ],
                "summary": "Save Menu Changes",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Provider Id",
                        "name": "provider_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Menu Date",
                        "name": "date",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Menu Items Description",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/requests.MenuUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.Menu"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/errors.RequestError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/errors.RequestError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/errors.RequestError"
                        }
                    }
                }
            }
        },
        "/providers/index": {
            "get": {
                "description": "Get Providers List",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Providers"
                ],
                "summary": "Get Providers",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.User"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/errors.RequestError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "errors.RequestError": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object"
                },
                "message": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "models.Category": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "title": {
                    "type": "object",
                    "$ref": "#/definitions/models.Translation"
                }
            }
        },
        "models.Comment": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "string"
                },
                "dishId": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "itemId": {
                    "type": "integer"
                },
                "owner": {
                    "type": "object",
                    "$ref": "#/definitions/models.User"
                },
                "ownerId": {
                    "type": "integer"
                },
                "repliedId": {
                    "type": "integer"
                }
            }
        },
        "models.Dish": {
            "type": "object",
            "properties": {
                "calories": {
                    "type": "number"
                },
                "categoryId": {
                    "type": "integer"
                },
                "description": {
                    "type": "object",
                    "$ref": "#/definitions/models.Translation"
                },
                "id": {
                    "type": "integer"
                },
                "images": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Image"
                    }
                },
                "name": {
                    "type": "object",
                    "$ref": "#/definitions/models.Translation"
                },
                "price": {
                    "type": "number"
                },
                "providerId": {
                    "type": "integer"
                },
                "weight": {
                    "type": "number"
                }
            }
        },
        "models.Image": {
            "type": "object",
            "properties": {
                "guid": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "models.Menu": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string"
                },
                "deadline": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.MenuItem"
                    }
                },
                "time": {
                    "type": "string"
                }
            }
        },
        "models.MenuItem": {
            "type": "object",
            "properties": {
                "availableCount": {
                    "type": "integer"
                },
                "dish": {
                    "type": "object",
                    "$ref": "#/definitions/models.Dish"
                },
                "dishId": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "initialCount": {
                    "type": "integer"
                },
                "orders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Order"
                    }
                },
                "price": {
                    "type": "number"
                }
            }
        },
        "models.Notification": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "isApproved": {
                    "type": "boolean"
                },
                "ownerId": {
                    "type": "integer"
                },
                "userNotes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.UserNotification"
                    }
                }
            }
        },
        "models.Office": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "lat": {
                    "type": "number"
                },
                "lng": {
                    "type": "number"
                },
                "phone": {
                    "type": "string"
                },
                "title": {
                    "type": "object",
                    "$ref": "#/definitions/models.Translation"
                }
            }
        },
        "models.Order": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "item": {
                    "type": "object",
                    "$ref": "#/definitions/models.MenuItem"
                },
                "itemId": {
                    "type": "integer"
                },
                "master": {
                    "type": "object",
                    "$ref": "#/definitions/models.User"
                },
                "orderedCount": {
                    "type": "integer"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "models.Role": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "models.Translation": {
            "type": "object",
            "properties": {
                "en": {
                    "type": "string"
                },
                "ru": {
                    "type": "string"
                },
                "ua": {
                    "type": "string"
                }
            }
        },
        "models.User": {
            "type": "object",
            "properties": {
                "alias": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "image": {
                    "type": "object",
                    "$ref": "#/definitions/models.Image"
                },
                "isProvider": {
                    "type": "boolean"
                },
                "isShop": {
                    "type": "boolean"
                },
                "lang": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "office": {
                    "type": "object",
                    "$ref": "#/definitions/models.Office"
                },
                "providerId": {
                    "type": "integer"
                },
                "role": {
                    "type": "object",
                    "$ref": "#/definitions/models.Role"
                },
                "timezone": {
                    "type": "string"
                }
            }
        },
        "models.UserNotification": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "is_read": {
                    "type": "boolean"
                },
                "notificationId": {
                    "type": "integer"
                },
                "owner": {
                    "type": "object",
                    "$ref": "#/definitions/models.Notification"
                },
                "userId": {
                    "type": "integer"
                }
            }
        },
        "requests.AuthLoginRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "requests.MenuUpdateRequest": {
            "type": "object",
            "properties": {
                "deadline": {
                    "type": "string"
                },
                "deliveryTime": {
                    "type": "string"
                },
                "dishes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/requests.ObjectCounter"
                    }
                }
            }
        },
        "requests.NotificationRequest": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "requests.ObjectCounter": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "requests.OrderingRequest": {
            "type": "object",
            "properties": {
                "menuItems": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/requests.ObjectCounter"
                    }
                }
            }
        },
        "requests.UpdateProfileRequest": {
            "type": "object",
            "properties": {
                "alias": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "imageGuid": {
                    "type": "string"
                },
                "lang": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "officeId": {
                    "type": "integer"
                },
                "password": {
                    "type": "string"
                },
                "providerId": {
                    "type": "integer"
                },
                "timezone": {
                    "type": "string"
                }
            }
        },
        "responses.AuthLoginResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "statusCode": {
                    "type": "integer"
                },
                "success": {
                    "type": "boolean"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "responses.GeneralResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object"
                },
                "message": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "responses.StatsResponse": {
            "type": "object",
            "properties": {
                "calories": {
                    "type": "number"
                },
                "price": {
                    "type": "number"
                },
                "weight": {
                    "type": "number"
                }
            }
        },
        "structs.IdsArray": {
            "type": "object",
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "int64"
                    }
                }
            }
        },
        "structs.SimpleId": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                }
            }
        }
    },
    "securityDefinitions": {
        "Authorization": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}